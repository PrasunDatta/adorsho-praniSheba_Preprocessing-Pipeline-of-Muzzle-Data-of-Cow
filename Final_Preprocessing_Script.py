# -*- coding: utf-8 -*-
"""Preprocessing_script.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HSDX-ybnSI4y7SNlGISIRMH1Ed5ZlC4U
"""
#necessary imports
import argparse
from logging import raiseExceptions
import os
import cv2
import matplotlib.pyplot as plt
import numpy as np
import shutil
import glob

from prometheus_client import ProcessCollector

def main(root_path, output_path):
  
  crop_muzzle_pth = os.path.join(root_path,"Cropped_muzzle_image")
  # root_path = root_path
  # output_path = output_path
  # processed_image = args.output_path

  crop_img_folders = sorted(os.listdir(crop_muzzle_pth))
  # print(data_folder)
  all_crop_imgs = []
  for index,_ in enumerate(crop_img_folders):
    crop_img_pth = sorted(glob.glob(crop_muzzle_pth +'/'+ crop_img_folders[index]+'/*'))

    all_crop_imgs.append(crop_img_pth)
  # print(f"Prasun: {train_imgs}")

  #This will create the folder where preprocessed images will be saved.
  # for folder in crop_img_folders:
  #   # os.mkdir(os.path.join(processed_image,folder))
  #   folder_path = os.path.join(output_path, folder)
  #   if not os.path.isdir(folder_path):
  #     os.makedirs(folder_path)

  #sharpening kernel 
  sharpen_kernel = np.array([[0,-1,0], [-1,5,-1], [0,-1,0]])  

  for images in all_crop_imgs:
    for index,_ in enumerate(images):
      folder_path,img_name = os.path.split(images[index])
      _,subject_name = os.path.split(folder_path)
      img_name_only,image_extension = os.path.splitext(img_name)
      or_image = cv2.imread(images[index]) #read the image 
      sharpen = cv2.filter2D(or_image, -1, sharpen_kernel) #sharpening will occur here.
      gray_img = cv2.cvtColor(sharpen, cv2.COLOR_BGR2GRAY) #converting to grayscale
      clahe = cv2.createCLAHE(clipLimit =2.0, tileGridSize=(8,8)) 
      cl_img = clahe.apply(gray_img) #CLAHE is applied
      # path_folder = os.path.join(processed_image,subject_name)
      path_folder = os.path.join(output_path, subject_name)
      path_img = os.path.join(path_folder,img_name_only+"_CLAHE.png") #path of preprocessed images
      print(path_img)
      shutil.copy(images[index] ,path_folder) # orginal image will copy in the preprocessed image directory
      plt.imsave(path_img,cl_img,cmap ="gray") # preprocessed image will save.

if __name__ == '__main__':
  parser = argparse.ArgumentParser(description = "Preprocessing pipeline:Sharpening=>Histogram Equalization.")
  parser.add_argument("--root-path", default="/content/gdrive/MyDrive/PrasunFolder/Adorsho_Pranisheba/Cow's_data_Collection_for_V2", type=str, help="path to root data folder")
  parser.add_argument("--output-path", default="/content/gdrive/MyDrive/PrasunFolder/Adorsho_Pranisheba/Cow's_data_Collection_for_V2/Processed_image", type=str, help="path to the folder where prpcessed images will be saved.")

  args = parser.parse_args()
  root_path = args.root_path
  output_path = args.output_path

  main(root_path=root_path, output_path=output_path)